@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

@layer base {
  :root {
    --current-theme: "light";

    /* Colors */
    --background: #9FABB8;
    --foreground: #2a2e2a;
    --primary: #2F5233;
    --primary-foreground: #ffffff;
    --secondary: #E8F1E9;
    --secondary-foreground: #1a2419;
    --muted: #F5F9F5;
    --muted-foreground: #2F5233;
    --accent: #D5E6D7;
    --accent-foreground: #1a2419;
    --destructive: #cc4444;
    --destructive-foreground: #ffffff;
    --border: #D5E6D7;
    
    /* Glass effect */
    --glass-bg: 0.85;
    --glass-border: 0.15;
    --glass-blur: 12px;
    
    /* Animation */
    --transition-ease: cubic-bezier(0.16, 1, 0.3, 1);
    --transition-duration: 250ms;

    /* Spacing */
    --content-padding: 1.5rem;
    --card-padding: 1rem;
    --input-height: 2.5rem;
    --button-height: 2.5rem;
    
    /* Border radius */
    --radius-sm: 0.375rem;
    --radius-md: 0.5rem;
    --radius-lg: 0.75rem;
    --radius-xl: 1rem;

    /* Z-index layers */
    --z-map: 0;
    --z-content: 10;
    --z-header: 20;
    --z-dialog: 50;
  }

  .dark {
    --current-theme: "dark";

    --background: #666c76;
    --foreground: #f5f9f5;
    --primary: #4b7b4f;
    --primary-foreground: #ffffff;
    --secondary: #2f5233;
    --secondary-foreground: #f5f9f5;
    --muted: #2f5233;
    --muted-foreground: #b8e6c4;
    --accent: #3d6340;
    --accent-foreground: #f5f9f5;
    --destructive: #cc4444;
    --destructive-foreground: #ffffff;
    --border: #2f5233;
    
    --glass-bg: 30%;
    --glass-border: 0.1;
    --glass-blur: 12px;
  }

  /* Disable transitions on page load */
  .no-transitions * {
    transition: none !important;
  }

  dialog::backdrop {
    @apply bg-black/20 backdrop-blur-sm;
  }

  dialog {
    @apply bg-transparent;
  }
}

@layer base {
  body {
    background-color: var(--background);
    color: var(--foreground);
  }
  body:has([data-clerk-component="SignIn"]) { 
    .map-controls {
      opacity: 0 !important;
      pointer-events: none !important;
    }
    .maplibregl-canvas {
      filter: blur(4px) !important;
    }
  }
  
  :root {
    --cs-bounce-curve: cubic-bezier(.51,.89,.29,1.08)
    --cs-crazy-bounce: cubic-bezier(.47,-0.51,.46,1.41)
  }
}

@layer components {

  .frosted-glass,
  .frosted-glass-bg-base {
    @apply backdrop-blur-md bg-white/50 dark:bg-black/50 border border-zinc-200/50 dark:border-white/10;
    backdrop-filter: blur(var(--glass-blur));
    background-color: color-mix(in srgb, var(--background) var(--glass-bg), transparent 10%);
    border: 1px solid color-mix(in srgb, var(--foreground) var(--glass-border), transparent);
    &::before {
      content: "";
      position: absolute;
      inset: -1.4px;
      background: transparent;
      border-radius: inherit;
      background-color: red;
      opacity: 0.4;
      pointer-events: none;
    }
  }

  .frosted-glass {
    border: 1px solid color-mix(in srgb, var(--foreground) var(--glass-border), transparent);
    border-radius: 12px;
  }

  .primary-gradient {
    @apply bg-gradient-to-r from-emerald-600/70 to-teal-400/70;
  }

  .frosted-glass.card {
    border-radius: 24px;
    overflow: visible;
  }

    @keyframes frosted-glass-loading {
      0% {
        scale: 1;
        opacity: 1;
      }
      10% {
        scale: 1.02;
        opacity: 1;
      }
      20% {
        scale: 1;
        opacity: 1;
      }
      100% {
        scale: 1;
        opacity: 1;
      }
    }
    @keyframes frosted-glass-after-loading {
      0% {
        scale: 1;
        opacity: 0.4;
      }
      20% {
        scale: 1.1;
        opacity: 0.4;
      }
      50% {
        scale: 2;
        opacity: 0;
      }
      100% {
        scale: 2;
        opacity: 0;
      }
    }
    .frosted-glass[data-loading="true"] {
      animation: frosted-glass-loading 1s infinite;
      ::after {
        filter: blur(4px);
        content: "";
        position: absolute;
        inset: 0;
        border-radius: 12px;
        opacity: 0.2;
        z-index: -1;
        outline: 2px solid rgba(180, 180, 180, 0.2);
        outline-width: 7px;
        animation: frosted-glass-after-loading 1s infinite;
      }
    }
    
    .light .frosted-glass::before,
    .light .frosted-glass-bg-base::before {
      background: white;
      opacity: 0.4;
      z-index: -1;
    }
    
    .dark .frosted-glass::before,
    .dark .frosted-glass-bg-base::before {
      /* opacity: 0.4; */
      background: linear-gradient(to right, rgb(82, 82, 91), rgb(82, 82, 91), rgb(82, 82, 91));
    } 

    .dark .cl-card {
      background: color-mix(in srgb, black var(--glass-bg), transparent);
    }
    .light .cl-card {
      background: color-mix(in srgb, white 40%, transparent);
    }

  /* MapLibre Controls */
  :root {
    /* Hide all default controls */
    .gmnoprint,
    .maplibregl-control-container,
    .maplibregl-ctrl.maplibregl-ctrl-attrib,
    .cl-formButtonPrimary::after,
    .maplibregl-ctrl.maplibregl-ctrl-scale {
      display: none !important;
    }
    .cl-rootBox.cl-userProfile-root {
      width: 100%;
    }
    .cl-formButtonPrimary {
      font-size: 12px;
      text-transform: none;
      background-color: var(--background);
    }
    .cl-header, .cl-footer, .cl-navbar, .cl-navbarMobileMenuRow {
      display: none !important;
    }
    .cl-phoneInputBox {
      .cl-formFieldInput,
      .cl-input,
      .cl-formFieldInput__identifier,
      .cl-input__identifier,
      .cl-required {
        margin-left: -16px;
        z-index: 0;
        padding-left: 20px;
      }
    }
    .cl-cardBox {
        max-width: unset;
        width: unset;
        max-height: 70dvh;
        overflow: scroll;
    }
    .cl-cardBox,
    .cl-formFieldInput, .cl-scrollBox,
    .cl-pageScrollBox {
      @media (max-width: 768px) {
        font-size: 16px !important; 
      }
      color: var(--foreground);
      backdrop-filter: blur(16px) !important;
    }
    .cl-formButtonPrimary, .cl-button {
      background-color: color-mix(in srgb, var(--background) 20%, transparent);
    }
    .cl-scrollBox,
    .cl-pageScrollBox,
    .cl-userProfile-root > .cl-cardBox {
        box-shadow: none !important;
        background-color: transparent !important;
        height: unset !important;
        color: var(--foreground) !important;
        backdrop-filter: none !important;
      
        .cl-pageScrollBox {
            padding: 0 !important;
        }
    }
    .cl-socialButtonsIconButton,
    .cl-dividerLine {
        background-color: color-mix(in srgb, var(--foreground) var(--glass-bg), transparent) !important;
        color: color-mix(in srgb, var(--foreground) var(--glass-bg), transparent) !important;
    }
    .cl-socialButtonsIconButton,
    .cl-dividerLine,
    .cl-dividerText,
    .cl-userPreviewTextContainer,
    .cl-profileSectionItem p,
    .cl-formFieldSuccessText__password,
    .cl-formFieldInput {
        color: color-mix(in srgb, var(--foreground) var(--glass-bg), transparent) !important;
        @apply text-sm font-medium text-zinc-800 dark:text-zinc-200
    }
    .cl-profileSectionTitleText {
        color: color-mix(in srgb, var(--foreground) 70%, transparent) !important;
        @apply text-sm font-medium text-zinc-800 dark:text-zinc-200
    }
    .cl-menuButtonEllipsis {
        color: white !important;
        background-color: color-mix(in srgb, var(--background) 30%, transparent) !important;
        border-radius: 100% !important;
        filter: brightness(1.8) !important;
    }
    .cl-profileSectionItem * {
        color: color-mix(in srgb, var(--foreground) var(--glass-bg), transparent) !important;
        @apply text-zinc-800 dark:text-zinc-200
    }
    .cl-socialButtonsIconButton:hover {
        background-color: color-mix(in srgb, var(--foreground) var(--glass-bg), transparent) !important;
    }
    .cl-formFieldLabel,
    .cl-formFieldAction,
    .cl-selectButton,
    .cl-selectButton > *,
    .cl-button {
        color: color-mix(in srgb, var(--foreground) 60%, transparent) !important;
    }
    .cl-actionCard,
    .cl-selectButton,
    .cl-formFieldInput,
    .cl-menuList {
        backdrop-filter: blur(16px) !important;
        background-color: color-mix(in srgb, var(--foreground) 2%, transparent) !important;
    }
    .cl-phoneInputBox {
        background-color: color-mix(in srgb, var(--foreground) 2%, transparent) !important;
    }
    .cl-phoneInputBox > div {
      color: color-mix(in srgb, var(--foreground) 60%, transparent) !important;
      background-color: color-mix(in srgb, var(--foreground) 2%, transparent) !important;
    }
    .cl-phoneInputBox > p {
      z-index: 2;
    }
    .cl-profileSection .cl-profileSection__profile {
        padding: 0 !important;
    }

    .root-layout-container {
      > :first-child {
        pointer-events: auto
      }
    }
    .root-layout-container:has([data-clerk-component="SignIn"]) {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
    }
  }

  /* Dialog animations */
  @keyframes toastShowMobile {
    from {
      transform: translate(-50%, 16px);
      opacity: 0;
    }
    to {
      transform: translate(-50%, 0);
      opacity: 1;
    }
  }

  @keyframes toastHideMobile {
    from {
      transform: translate(-50%, 0);
      opacity: 1;
    }
    to {
      transform: translate(-50%, 16px);
      opacity: 0;
    }
  }

  @keyframes toastShowDesktop {
    from {
      transform: translateX(16px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes toastHideDesktop {
    from {
      transform: translateX(0);
      opacity: 1;
    }
    to {
      transform: translateX(16px);
      opacity: 0;
    }
  }

  @keyframes overlayShow {
    from {
      backdrop-filter: blur(0);
      opacity: 0;
    }
    to {
      backdrop-filter: blur(4px);
      opacity: 1;
    }
  }

  @keyframes overlayHide {
    from {
      backdrop-filter: blur(4px);
      opacity: 1;
    }
    to {
      backdrop-filter: blur(0);
      opacity: 0;
    }
  }

  @keyframes contentShowDesktop {
    from {
      scale: 0.36;
      filter: blur(16px);
      opacity: 0;
    }
    to {
      scale: 1;
      filter: blur(0px);
      opacity: 1;
    }
  }

  @keyframes contentHideDesktop {
    from {
      scale: 1;
      filter: blur(0px);
      opacity: 1;
    }
    to {
      scale: 0.36;
      filter: blur(16px);
      opacity: 0;
    }
  }

  @keyframes contentShowMobile {
    from {
      transform: translateY(100%);
    }
    to {
      transform: translateY(0);
    }
  }

  @keyframes contentHideMobile {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(100%);
    }
  }

  @keyframes bulge {
    0% {
      transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
    }
    33% {
      transform: matrix3d(1, 0, 0, .007, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
    }
    66% {
      transform: matrix3d(1, 0, 0, -.007, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
    }
    100% {
      transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
    }
  }

  .dialog-overlay[data-state="open"] {
    animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
    backdrop-filter: blur(4px);
    opacity: 1;
    z-index: var(--z-dialog);
  }
  .dark .dialog-overlay[data-state="open"] {
    @apply fixed inset-0 bg-black/50 backdrop-blur-sm;
  }
  .light .dialog-overlay[data-state="open"] {
    @apply fixed inset-0 bg-white/20 backdrop-blur-sm;
  }

  .dialog-overlay[data-state="closed"] {
    animation: overlayHide 150ms cubic-bezier(0.16, 1, 0.3, 1);
    backdrop-filter: blur(0);
    opacity: 0;
    z-index: var(--z-dialog);
  }

  .dialog-content[data-state="open"] {
    opacity: 1;
    z-index: var(--z-dialog);
    outline: none;
  }

  .dialog-content[data-state="closed"] {
    opacity: 0;
    z-index: var(--z-dialog);
    outline: none;
  }

  /* Desktop styles */
  @media (min-width: 768px) {
    .dialog-content {
      position: fixed;
      left: 50%;
      top: 50%;
      max-width: 40rem;
    }
    
    .dialog-content[data-state="open"] {
      animation: contentShowDesktop var(--transition-duration) var(--transition-ease);
      transform: translate(-50%, -50%) scale(1);
      max-width: 40rem;
    }

    .dialog-content[data-state="closed"] {
      animation: contentHideDesktop var(--transition-duration) var(--transition-ease);
      transform: translate(-50%, -48%) scale(0.36);
    }
  }

  /* Mobile styles */
  @media (max-width: 767px) {
    .dialog-content {
      position: fixed;
      left: 0;
      right: 0;
      bottom: 0;
      max-height: 100dvh;
      width: 100%;
      overflow-y: auto;
      margin: 0;
      transform: none;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      opacity: 1 !important;
    }

    .dialog-content[data-state="open"] {
      animation: contentShowMobile var(--transition-duration) var(--transition-ease);
      transform: translateY(0);
    }

    .dialog-content[data-state="closed"] {
      animation: contentHideMobile var(--transition-duration) var(--transition-ease);
      transform: translateY(100%);
    }

    /* Ensure content inside dialog is rounded only at the top on mobile */
    .dialog-content > div > .frosted-glass {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }

    /* Remove desktop positioning */
    .dialog-content {
      transform-origin: bottom center;
      left: 0 !important;
      right: 0 !important;
      top: auto !important;
      transform: none;
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;
    }
  }

  /* Remove focus outline but keep it for keyboard navigation */
  .dialog-content:focus:not(:focus-visible) {
    outline: none;
  }

  .dialog-content:focus-visible {
    outline: none;
  }

  .input, input, textarea {
    padding: 0.25rem 0.5rem;
    border-radius: 10px;
    color: var(--foreground);
    font-weight: 500;
    border: 1px solid color-mix(in srgb, var(--foreground) 20%, transparent) !important;
    background-color: color-mix(in srgb, var(--background) 40%, transparent) !important;
  }

  .input:focus-visible {
    outline: 2px solid color-mix(in srgb, var(--foreground) 40%, transparent);
    outline-offset: -1px;
  }
  
  .input::placeholder {
    color: color-mix(in srgb, var(--foreground) 50%, transparent);
    font-weight: 400;
  }

  .dark .input, .dark input, .dark textarea {
    background-color: color-mix(in srgb, var(--background) 20%, transparent) !important;
    border: 1px solid color-mix(in srgb, var(--foreground) var(--glass-bg), transparent) !important;
  }

  /* Toast animations */
  .toast-enter {
    animation: toastShowMobile 200ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }

  .toast-exit {
    animation: toastHideMobile 200ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }

  @media (min-width: 768px) {
    .toast-enter {
      animation: toastShowDesktop 200ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }

    .toast-exit {
      animation: toastHideDesktop 200ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }
  }
  div.gm-style > div:nth-child(16) > div,
  .StreetViewCard > div:nth-child(3) > div:nth-child(16)
  .StreetViewCard > div:nth-child(2) > div:nth-child(16) {
    /* scale: 1 !important; */
    opacity: 0.1 !important;
  }

  /* Add these styles to adjust the existing animations for our tree-info-panel */
  .tree-info-panel[data-animation="entering"] {
    animation: tree-panel-show 300ms ease forwards;
  }

  .tree-info-panel[data-animation="exiting"] {
    animation: tree-panel-hide 300ms ease forwards;
  }

  @keyframes tree-panel-show {
    from {
      transform: translate(-50%, calc(-100% - 48px)) scale(0.8);
      filter: blur(8px);
      opacity: 0;
    }
    to {
      transform: translate(-50%, calc(-100% - 48px)) scale(1);
      filter: blur(0px);
      opacity: 1;
    }
  }

  @keyframes tree-panel-hide {
    from {
      transform: translate(-50%, calc(-100% - 48px)) scale(1);
      filter: blur(0px);
      opacity: 1;
    }
    to {
      transform: translate(-50%, calc(-100% - 48px)) scale(0.8);
      filter: blur(8px);
      opacity: 0;
    }
  }

  /* Scrollable content mask styles */
  .scrollable-content-mask {
    mask-image: linear-gradient(to bottom, transparent 0%, black 7%, black 93%, transparent 100%);
    transition: mask-image 0.3s ease-in-out;
  }

  .scrollable-content-mask--at-top {
    mask-image: linear-gradient(to bottom, black 0%, black 93%, transparent 100%);
    transition: mask-image 0.3s ease-in-out;
  }

  .scrollable-content-mask--at-bottom {
    mask-image: linear-gradient(to bottom, transparent 0%, black 7%, black 100%);
    transition: mask-image 0.3s ease-in-out;
  }
}
